# docker-compose.dokploy.yml
services:
  app:
    build: .
    env_file: .env
    depends_on:
      minio:
        condition: service_healthy
    environment:
      GIN_MODE: ${GIN_MODE:-release}
      PORT: ${PORT:-8080}

      # External Postgres (NocoDB)
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}

      # External Redis (DragonflyDB)
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      # Local MinIO
      MINIO_HOST: ${MINIO_HOST}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - inner

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Console UI
    volumes:
      - "./data/minio:/data:Z"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - inner

  nginx:
    image: nginx:latest
    volumes:
      - "./sample-files:/usr/share/nginx/html:ro"
    ports:
      - "8081:80"
    networks:
      - inner

networks:
  inner:
    external: true
